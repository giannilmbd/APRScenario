geom_point(data = unique(df.all[c("Region", "cc")]),
aes(x = Inf, y = Inf, color = Region),
alpha = 0) +
scale_color_manual(name = "Region", values = region_colors) +
guides(color = guide_legend(override.aes = list(alpha = 1)))
# kappas ----------
pp2 <- ggplot(df.mixed) +
geom_hline(yintercept = 0, color = 'red', linewidth = .5, linetype='dashed') +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB - 1) * 100, shape = 'kB'), color = 'black', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC - 1) * 100, shape = 'kC'), color = 'black', size = 3) +
geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB_aut - 1) * 100, shape = 'kB_aut'), color = 'gray', size = 3) +
geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC_aut - 1) * 100, shape = 'kC_aut'), color = 'gray', size = 3) +
coord_flip() +
ylab('') +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
scale_shape_manual(
name = '',
values = c('kB' = 22, 'kC' = 24,'kB_aut' = 2, 'kC_aut' = 4),
labels = c(
'kB' = TeX('$\\kappa_{j, AE}$'),
'kC' = TeX('$\\kappa_{j, EME+}$'),
'kB_aut' = TeX('$\\kappa_{j, AE}^{au}$'),
'kC_aut' = TeX('$\\kappa_{j, EME+}^{au}$'))
)+
theme_minimal(base_size = 19) +
theme(
axis.title.x = element_text(size = 15, hjust = 0),
legend.position = 'bottom',
legend.title = element_text(size = 15, face = "bold"),
legend.text = element_text(hjust = 0),
legend.box = 'vertical',
legend.key.height = unit(0.1, "mm"),
legend.key.width = unit(10, "mm"),
text = element_text(size = 19)
) +
xlab('') +
theme(axis.text.y = element_blank())
pp2
df.mixed[,c('cc','kappaC','kappaC_aut')]
# kappas ----------
pp2 <- ggplot(df.mixed) +
geom_hline(yintercept = 0, color = 'red', linewidth = .5, linetype='dashed') +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB - 1) * 100, shape = 'kB'), color = 'black', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC - 1) * 100, shape = 'kC'), color = 'black', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB_aut - 1) * 100, shape = 'kB_aut'), color = 'gray', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC_aut - 1) * 100, shape = 'kC_aut'), color = 'gray', size = 3) +
geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB - kappaB_aut) * 100, shape = 'kB'), color = 'black', size = 3) +
geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC - kappaC_aut) * 100, shape = 'kC'), color = 'black', size = 3) +
coord_flip() +
ylab('') +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
scale_shape_manual(
name = '',
values = c('kB' = 22, 'kC' = 24,'kB_aut' = 2, 'kC_aut' = 4),
labels = c(
'kB' = TeX('$\\kappa_{j, AE}$'),
'kC' = TeX('$\\kappa_{j, EME+}$'),
'kB_aut' = TeX('$\\kappa_{j, AE}^{au}$'),
'kC_aut' = TeX('$\\kappa_{j, EME+}^{au}$'))
)+
theme_minimal(base_size = 19) +
theme(
axis.title.x = element_text(size = 15, hjust = 0),
legend.position = 'bottom',
legend.title = element_text(size = 15, face = "bold"),
legend.text = element_text(hjust = 0),
legend.box = 'vertical',
legend.key.height = unit(0.1, "mm"),
legend.key.width = unit(10, "mm"),
text = element_text(size = 19)
) +
xlab('') +
theme(axis.text.y = element_blank())
pp2
# kappas ----------
pp2 <- ggplot(df.mixed) +
geom_hline(yintercept = 0, color = 'red', linewidth = .5, linetype='dashed') +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB - 1) * 100, shape = 'kB'), color = 'black', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC - 1) * 100, shape = 'kC'), color = 'black', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB_aut - 1) * 100, shape = 'kB_aut'), color = 'gray', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC_aut - 1) * 100, shape = 'kC_aut'), color = 'gray', size = 3) +
geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB - kappaB_aut) * 100, shape = 'kB'), color = 'black', size = 3) +
geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC - kappaC_aut) * 100, shape = 'kC'), color = 'black', size = 3) +
coord_flip() +
ylab('') +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
scale_shape_manual(
name = '',
values = c('kB' = 22, 'kC' = 24,'kB_aut' = 2, 'kC_aut' = 4),
labels = c(
'kB' = TeX('$\\kappa_{j, AE}$'),
'kC' = TeX('$\\kappa_{j, EME+}$'),
'kB_aut' = TeX('$\\widehat \\kappa_{j, AE}^{au}$'),
'kC_aut' = TeX('$\\kappa_{j, EME+}^{au}$'))
)+
theme_minimal(base_size = 19) +
theme(
axis.title.x = element_text(size = 15, hjust = 0),
legend.position = 'bottom',
legend.title = element_text(size = 15, face = "bold"),
legend.text = element_text(hjust = 0),
legend.box = 'vertical',
legend.key.height = unit(0.1, "mm"),
legend.key.width = unit(10, "mm"),
text = element_text(size = 19)
) +
xlab('') +
theme(axis.text.y = element_blank())
pp2
# kappas ----------
pp2 <- ggplot(df.mixed) +
geom_hline(yintercept = 0, color = 'red', linewidth = .5, linetype='dashed') +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB - 1) * 100, shape = 'kB'), color = 'black', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC - 1) * 100, shape = 'kC'), color = 'black', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB_aut - 1) * 100, shape = 'kB_aut'), color = 'gray', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC_aut - 1) * 100, shape = 'kC_aut'), color = 'gray', size = 3) +
geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB - kappaB_aut) * 100, shape = 'kB'), color = 'black', size = 3) +
geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC - kappaC_aut) * 100, shape = 'kC'), color = 'black', size = 3) +
coord_flip() +
ylab('') +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
scale_shape_manual(
name = '',
values = c('kB' = 22, 'kC' = 24,'kB_aut' = 2, 'kC_aut' = 4),
labels = c(
'kB' = TeX('$\\kappa_{j, AE}$'),
'kC' = TeX('$\\kappa_{j, EME+}$'),
'kB_aut' = TeX('$\\widehat{\\kappa}_{j, AE}^{au}$'),
'kC_aut' = TeX('$\\kappa_{j, EME+}^{au}$'))
)+
theme_minimal(base_size = 19) +
theme(
axis.title.x = element_text(size = 15, hjust = 0),
legend.position = 'bottom',
legend.title = element_text(size = 15, face = "bold"),
legend.text = element_text(hjust = 0),
legend.box = 'vertical',
legend.key.height = unit(0.1, "mm"),
legend.key.width = unit(10, "mm"),
text = element_text(size = 19)
) +
xlab('') +
theme(axis.text.y = element_blank())
pp2
# kappas ----------
pp2 <- ggplot(df.mixed) +
geom_hline(yintercept = 0, color = 'red', linewidth = .5, linetype='dashed') +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB - 1) * 100, shape = 'kB'), color = 'black', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC - 1) * 100, shape = 'kC'), color = 'black', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB_aut - 1) * 100, shape = 'kB_aut'), color = 'gray', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC_aut - 1) * 100, shape = 'kC_aut'), color = 'gray', size = 3) +
geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB - kappaB_aut) * 100, shape = 'kB'), color = 'black', size = 3) +
geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC - kappaC_aut) * 100, shape = 'kC'), color = 'black', size = 3) +
coord_flip() +
ylab('') +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
scale_shape_manual(
name = '',
values = c('kB' = 22, 'kC' = 24,'kB_aut' = 2, 'kC_aut' = 4),
labels = c(
'kB' = TeX('$\\widehat{\\kappa}_{j, AE}$'),
'kC' = TeX('$\\kappa_{j, EME+}$'),
'kB_aut' = TeX('$\\kappa_{j, AE}^{au}$'),
'kC_aut' = TeX('$\\kappa_{j, EME+}^{au}$'))
)+
theme_minimal(base_size = 19) +
theme(
axis.title.x = element_text(size = 15, hjust = 0),
legend.position = 'bottom',
legend.title = element_text(size = 15, face = "bold"),
legend.text = element_text(hjust = 0),
legend.box = 'vertical',
legend.key.height = unit(0.1, "mm"),
legend.key.width = unit(10, "mm"),
text = element_text(size = 19)
) +
xlab('') +
theme(axis.text.y = element_blank())
pp2
# kappas ----------
pp2 <- ggplot(df.mixed) +
geom_hline(yintercept = 0, color = 'red', linewidth = .5, linetype='dashed') +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB - 1) * 100, shape = 'kB'), color = 'black', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC - 1) * 100, shape = 'kC'), color = 'black', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB_aut - 1) * 100, shape = 'kB_aut'), color = 'gray', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC_aut - 1) * 100, shape = 'kC_aut'), color = 'gray', size = 3) +
geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB - kappaB_aut) * 100, shape = 'kB'), color = 'black', size = 3) +
geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC - kappaC_aut) * 100, shape = 'kC'), color = 'black', size = 3) +
coord_flip() +
ylab('') +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
scale_shape_manual(
name = '',
values = c('kB' = 22, 'kC' = 24,'kB_aut' = 2, 'kC_aut' = 4),
labels = c(
'kB' = TeX('$\\widehat{\\kappa}_{j, AE}$'),
'kC' = TeX('$\\widehat{\\kappa}_{j, EME+}$'),
'kB_aut' = TeX('$\\kappa_{j, AE}^{au}$'),
'kC_aut' = TeX('$\\kappa_{j, EME+}^{au}$'))
)+
theme_minimal(base_size = 19) +
theme(
axis.title.x = element_text(size = 15, hjust = 0),
legend.position = 'bottom',
legend.title = element_text(size = 15, face = "bold"),
legend.text = element_text(hjust = 0),
legend.box = 'vertical',
legend.key.height = unit(0.1, "mm"),
legend.key.width = unit(10, "mm"),
text = element_text(size = 19)
) +
xlab('') +
theme(axis.text.y = element_blank())
pp2
file='~/Dropbox/Apps/Overleaf/CoLiLo/Paper/figures/distro_gains_3c_mu.pdf'
ggsave(filename = file,plot=pp2,device='pdf',units='cm',width=19,height=20)
library(patchwork)
# Combine plots:
pp<-pp+theme(text=element_text(size=14))
pp2<-pp2+theme(text=element_text(size=14))
combined_plot <- pp + pp2 +
plot_layout(ncol = 2, guides = 'collect') &
theme(legend.position = 'bottom',legend.text = element_text(size=12))
combined_plot<-combined_plot+theme(text=element_text(size=14),
legend.text = element_text(size=10))+
plot_layout(ncol = 2, guides = 'collect') +
theme(
legend.position = 'bottom',
legend.key.size = unit(0.1, 'cm'),       # reduce symbol size
legend.text = element_text(size = 8),    # reduce text size
legend.title = element_text(size = 9)    # reduce title size
)
combined_plot
#Save combined plot
ggsave(
filename = '~/Dropbox/Apps/Overleaf/CoLiLo/Paper/figures/distro_gains_combined.pdf',
plot = combined_plot,
device = 'pdf',
width = 19,
height = 15,  # Adjust height to reflect row structure (smaller than before)
units = 'cm'
)
# Now plot
pp <- ggplot(df.mixed) +
geom_bar(aes(x = reorder(cc_label, GainPCU),
y = (GainPCU - 1) * 100),
stat = 'identity', fill = "gray80", alpha = 1) +
xlab("") +
ylab(TeX('$(PCU_j-1) \\times 100$')) +
coord_flip() +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
theme_minimal(base_size = 19) +
theme(axis.text.y = element_markdown(size = 10),  # Enable colored axis labels
axis.title.x = element_text(size = 10, hjust = 0),
legend.position = 'bottom',
legend.title = element_text(size = 13, face = "bold"),
legend.text = element_text(hjust = 0),
legend.box = 'vertical',
legend.key.height = unit(0.1, "mm"),
legend.key.width = unit(10, "mm"))+
theme(text=element_text(size=19))
# Add the legend for regions
pp<-pp + xlab('')+labs(title=TeX('$PCU_j$')) +
geom_point(data = unique(df.mixed[c("Region", "cc")]),  # ensure one point per Region
aes(x = Inf, y = Inf, color = Region),  # invisible dummy points
alpha = 0) +  # fully transparent
scale_color_manual(name = "Region", values = region_colors) +
ylab("")+
guides(color = guide_legend(override.aes = list(alpha = 1)))  # make legend visible
pp
file='~/Dropbox/Apps/Overleaf/CoLiLo/Paper/figures/distro_gains_3c.pdf'
ggsave(filename = file,plot=pp,device='pdf',units='cm',width=19,height=20)
# kappas ----------
pp2 <- ggplot(df.mixed) +
geom_hline(yintercept = 0, color = 'red', linewidth = .5, linetype='dashed') +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB - 1) * 100, shape = 'kB'), color = 'black', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC - 1) * 100, shape = 'kC'), color = 'black', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB_aut - 1) * 100, shape = 'kB_aut'), color = 'gray', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC_aut - 1) * 100, shape = 'kC_aut'), color = 'gray', size = 3) +
geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB - kappaB_aut) * 100, shape = 'kB'), color = 'black', size = 3) +
geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC - kappaC_aut) * 100, shape = 'kC'), color = 'black', size = 3) +
coord_flip() +
labs(title=TeX("$\\kappa_j"))+
ylab('') +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
scale_shape_manual(
name = '',
values = c('kB' = 22, 'kC' = 24,'kB_aut' = 2, 'kC_aut' = 4),
labels = c(
'kB' = TeX('$\\widehat{\\kappa}_{j, AE}$'),
'kC' = TeX('$\\widehat{\\kappa}_{j, EME+}$'),
'kB_aut' = TeX('$\\kappa_{j, AE}^{au}$'),
'kC_aut' = TeX('$\\kappa_{j, EME+}^{au}$'))
)+
theme_minimal(base_size = 19) +
theme(
axis.title.x = element_text(size = 15, hjust = 0),
legend.position = 'bottom',
legend.title = element_text(size = 15, face = "bold"),
legend.text = element_text(hjust = 0),
legend.box = 'vertical',
legend.key.height = unit(0.1, "mm"),
legend.key.width = unit(10, "mm"),
text = element_text(size = 19)
) +
xlab('') +
theme(axis.text.y = element_blank())
pp2
file='~/Dropbox/Apps/Overleaf/CoLiLo/Paper/figures/distro_gains_3c_mu.pdf'
ggsave(filename = file,plot=pp2,device='pdf',units='cm',width=19,height=20)
library(patchwork)
# Combine plots:
pp<-pp+theme(text=element_text(size=14))
pp2<-pp2+theme(text=element_text(size=14))
combined_plot <- pp + pp2 +
plot_layout(ncol = 2, guides = 'collect') &
theme(legend.position = 'bottom',legend.text = element_text(size=12))
combined_plot<-combined_plot+theme(text=element_text(size=14),
legend.text = element_text(size=10))+
plot_layout(ncol = 2, guides = 'collect') +
theme(
legend.position = 'bottom',
legend.key.size = unit(0.1, 'cm'),       # reduce symbol size
legend.text = element_text(size = 8),    # reduce text size
legend.title = element_text(size = 9)    # reduce title size
)
combined_plot
#Save combined plot
ggsave(
filename = '~/Dropbox/Apps/Overleaf/CoLiLo/Paper/figures/distro_gains_combined.pdf',
plot = combined_plot,
device = 'pdf',
width = 19,
height = 15,  # Adjust height to reflect row structure (smaller than before)
units = 'cm'
)
# kappas ----------
pp2 <- ggplot(df.mixed) +
geom_hline(yintercept = 0, color = 'red', linewidth = .5, linetype='dashed') +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB - 1) * 100, shape = 'kB'), color = 'black', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC - 1) * 100, shape = 'kC'), color = 'black', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB_aut - 1) * 100, shape = 'kB_aut'), color = 'gray', size = 3) +
# geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC_aut - 1) * 100, shape = 'kC_aut'), color = 'gray', size = 3) +
geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaB - kappaB_aut) * 100, shape = 'kB'), color = 'black', size = 3) +
geom_point(aes(x = reorder(cc_label, GainPCU), y = (kappaC - kappaC_aut) * 100, shape = 'kC'), color = 'black', size = 3) +
coord_flip() +
labs(title=TeX("$\\kappa_j"))+
ylab('') +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
scale_shape_manual(
name = '',
values = c('kB' = 22, 'kC' = 24,'kB_aut' = 2, 'kC_aut' = 4),
labels = c(
'kB' = TeX('$\\widehat{\\kappa}_{j, AE}$'),
'kC' = TeX('$\\widehat{\\kappa}_{j, EME+}$'),
'kB_aut' = TeX('$\\kappa_{j, AE}^{au}$'),
'kC_aut' = TeX('$\\kappa_{j, EME+}^{au}$'))
)+
theme_minimal(base_size = 19) +
theme(
axis.title.x = element_text(size = 15, hjust = 0),
legend.position = 'bottom',
legend.title = element_text(size = 15, face = "bold"),
legend.text = element_text(hjust = 12),
legend.box = 'vertical',
legend.key.height = unit(0.1, "mm"),
legend.key.width = unit(10, "mm"),
text = element_text(size = 19)
) +
xlab('') +
theme(axis.text.y = element_blank())
pp2
file='~/Dropbox/Apps/Overleaf/CoLiLo/Paper/figures/distro_gains_3c_mu.pdf'
ggsave(filename = file,plot=pp2,device='pdf',units='cm',width=19,height=20)
library(patchwork)
# Combine plots:
pp<-pp+theme(text=element_text(size=14))
pp2<-pp2+theme(text=element_text(size=14))
combined_plot <- pp + pp2 +
plot_layout(ncol = 2, guides = 'collect') &
theme(legend.position = 'bottom',legend.text = element_text(size=12))
combined_plot<-combined_plot+theme(text=element_text(size=14),
legend.text = element_text(size=12))+
plot_layout(ncol = 2, guides = 'collect') +
theme(
legend.position = 'bottom',
legend.key.size = unit(0.1, 'cm'),       # reduce symbol size
legend.text = element_text(size = 8),    # reduce text size
legend.title = element_text(size = 9)    # reduce title size
)
combined_plot
combined_plot<-combined_plot+theme(text=element_text(size=14),
legend.text = element_text(size=12))+
plot_layout(ncol = 2, guides = 'collect') +
theme(
legend.position = 'bottom',
legend.key.size = unit(0.1, 'cm'),       # reduce symbol size
legend.text = element_text(size = 12),    # reduce text size
legend.title = element_text(size = 12)    # reduce title size
)
combined_plot
combined_plot<-combined_plot+theme(text=element_text(size=14),
legend.text = element_text(size=12))+
plot_layout(ncol = 2, guides = 'collect') +
theme(
legend.position = 'bottom',
legend.key.size = unit(0.1, 'cm'),       # reduce symbol size
legend.text = element_text(size = 15),    # reduce text size
legend.title = element_text(size = 12)    # reduce title size
)
combined_plot
#Save combined plot
ggsave(
filename = '~/Dropbox/Apps/Overleaf/CoLiLo/Paper/figures/distro_gains_combined.pdf',
plot = combined_plot,
device = 'pdf',
width = 19,
height = 15,  # Adjust height to reflect row structure (smaller than before)
units = 'cm'
)
df.gaussian<-read.table(file='../Three_country/CoLiLo_CRRA_3c_Gaussian/csvfiles_A_E/kappa_data_v.csv',sep=',',
header = T,colClasses = numeric())
df.mixed[,c('cc','kappaC','kappaC_aut')]
remove.packages(APRScenario)
remove.packages('APRScenario')
devtools::clean_dll('~/Dropbox/SNB/APRScenario')
devtools::load_all('~/Dropbox/SNB/APRScenario')
library(APRScenario)
library(APRScenario)
# Load required packages
library(APRScenario)
library(bsvarSIGNs)
library(bsvars)
# Chunk 1: setup
knitr::opts_chunk$set(cache = TRUE, echo = FALSE, include = TRUE, warning = FALSE, comment = NA, out.width="70%", out.height="70%",fig.align = "center", dpi=100,units="cm" ,fig.height=20, fig.width=20, out.width="120%")
# Chunk 2: Set-directory
# Following is because of the German way of typing dates etc.
Sys.setlocale("LC_TIME", "English.UTF-8") # Windows
# Load required packages
# library(APRScenario)
library(bsvarSIGNs)
library(bsvars)
library(ggplot2)
library(dplyr)
library(ggfortify)
library(gridExtra)
library(tidyr)
# Note: During package development, you can reload the package if needed
data(NKdata)
X0<-NKdata[,-1] %>% as.data.frame()
varbls<-names(X0)
p<-autoplot(X0 %>% ts(.,frequency=4,start=round(NKdata$year[1])),facets=T)+ylab('')+xlab('')
# To save the plot, use:
# ggsave('data.png', plot=p, device='png', path=tempdir(), width=18, height=16, units = 'cm')
unlink("~/Dropbox/SNB/APRScenario/vignettes/APRScenario_cache", recursive = TRUE)
unlink("~/Dropbox/SNB/APRScenario/vignettes/APRScenario_cache", recursive = TRUE)
devtools::clean_dll()
devtools::clean_dll('~/Dropbox/SNB/APRScenario/')
getwd()
setwd('~/Dropbox/SNB/APRScenario/')
devtools::clean_dll()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::run_examples()
getwd()
devtools::run_examples()
remove.packages("APRScenario")
devtools::install()         # Installs from local source
devtools::run_examples()
list.files("man", full.names = TRUE)
devtools::document()
unlink("man", recursive = TRUE)
devtools::document()
devtools::run_examples()
list.files("man", full.names = TRUE)
unlink("man", recursive = TRUE)
devtools::document()
devtools::run_examples()
list.files("man", full.names = TRUE)
unlink("man", recursive = TRUE)
devtools::document()
devtools::run_examples()
# Remove compiled docs and unnecessary build files
unlink("man", recursive = TRUE)
unlink("vignettes/*.html", recursive = TRUE)
unlink("vignettes/*.R", recursive = TRUE)
unlink("*.tar.gz")                 # Remove any built source packages
unlink("*.Rcheck", recursive = TRUE)  # Old check dirs
# If you use testthat:
unlink("tests/testthat/_snaps", recursive = TRUE)
# Clean all temporary files (Rproj user history etc, but keeps git files)
system("git clean -fdX")  # If you're using Git and .gitignore is set up
unlink("man", recursive = TRUE)
unlink("vignettes/*.html", recursive = TRUE)
unlink("vignettes/*.R", recursive = TRUE)
devtools::document()
devtools::build_vignettes()
devtools::build_vignettes()
install.packages("rhub")
rhub::check_for_cran()
rhub::auth(email = "giannilmbd@gmail.com")
rhub::check(platforms = "debian-clang-devel", email = "giannilmbd@gmail.com")
rhub <- rhubv2::rhub()
rhub <- rhub::rhub()
??rhub
??rhubv2
rhub::check_for_cran()
?rhubv2
rhubv2::rhub_setup()
rhub::rhub_setup()
devtools::check(cran = TRUE)
NKdata
